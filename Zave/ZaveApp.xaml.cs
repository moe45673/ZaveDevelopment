///////////////////////////////////////////////////////////
//  App.cs
//  Implementation of the Class App
//  Generated by Enterprise Architect
//  Created on:      28-Mar-2016 9:30:09 AM
//  Original author: Moshe
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Windows;
//using ZaveViewModel.ViewModels;
using ZaveGlobalSettings.ZaveFile;
using Prism.Events;
using Microsoft.Practices.Unity;
using ZaveController;
using ZaveGlobalSettings.Data_Structures;
using System.Drawing;


namespace Zave
{

    
    /// <summary>
    /// Interaction logic for App.xaml
    /// </summary>
    public partial class ZaveApp : Application
    {



        //public EventInitSingleton eventInit;
       

        /// <summary>
        /// Runs Init() Method
        /// </summary>
        public ZaveApp()
        {
            //Init();
            //MainWindow app = new MainWindow();
            //ZDFEntryViewModel viewModel = new ZDFEntryViewModel();
            //app.DataContext = viewModel;
            //app.Show();


        }

        

        ~ZaveApp()
        {

            //if(eventInit != null)
            //    eventInit.Dispose();

            string projFile = System.IO.Path.GetTempPath() + GuidGenerator.getGuid();
            //string projFile = System.IO.Path.GetTempPath() + "ZavePrototype";

            int maxAttempts = 20;
            int retryMilliseconds = 100;
            
            for (int attempts = 0; attempts <= maxAttempts; attempts++)
            {
                try
                {
                    File.Delete(projFile);

                }
                catch (IOException iox)
                {
                    if (attempts == maxAttempts)
                    {
                        throw iox;
                    }
                    System.Threading.Thread.Sleep(retryMilliseconds);
                    
                }
                
               
            }
        }

        private void Application_Startup(object sender, StartupEventArgs e)
        {
            var bs = new BootStrapper();
            bs.Run();
           

            //var eventAgg = bs.Container.Resolve(typeof(IEventAggregator)) as EventAggregator;
            //var activeZDF = bs.Container.Resolve(typeof(ZaveModel.ZDF.ZDFSingleton));//
            //eventInit = EventInitSingleton.GetInstance(eventAgg, bs.Container);
            string projFile = System.IO.Path.GetTempPath() + GuidGenerator.getGuid();
            //string projFile = System.IO.Path.GetTempPath() + "ZavePrototype";
            using (StreamWriter sw = StreamWriterFactory.createStreamWriter(projFile))
            {
                try
                {
                    sw.Write("[]");
                    
                }
                catch (IOException ex)
                {
                    throw ex;
                }
                finally
                {
                    sw.Close();
                }
            }
            

            

        }

        

        

    }//end App

}//end namespace ZaveProject