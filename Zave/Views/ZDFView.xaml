<UserControl x:Class="Zave.Views.ZDFView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Zave.Views"
             xmlns:vm ="clr-namespace:ZaveViewModel.ViewModels;assembly=ZaveViewModel"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             xmlns:converters="clr-namespace:Zave.Converters"
             d:DesignHeight="300" d:DesignWidth="300" 
             d:DataContext="{d:DesignInstance vm:ZDFViewModel, IsDesignTimeCreatable=True}">

    <UserControl.Resources>

        <converters:ColorConverters x:Key="ColorConverter"/>
        <!--ListView Styles-->
        <Style TargetType="ListView">
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="Background" Value="#F0F0F0"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Margin" Value="0,0,0,4"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{Binding TxtDocColor, Converter={StaticResource ColorConverter}}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListView_Border" TargetType="Border">
            <Setter Property="BorderThickness" Value="8,1,3,1"></Setter>
            <Setter Property="Margin" Value="0"></Setter>
            <Setter Property="Width" Value="{Binding Path=ActualWidth,ElementName=LV_EntryList, ConverterParameter=0.1}"></Setter>
        </Style>
        <!--Item Styles-->
        <Style x:Key="ListView_Item" TargetType="StackPanel">
            <Setter Property="Height" Value="130"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding TxtDocColor, Converter={StaticResource ColorConverter}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>                
            </Style.Triggers>
        </Style>

        
        <!--Text Styles-->
        <Style x:Key="ListView_Item_Text" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
            <Setter Property="ClipToBounds" Value="True"></Setter>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
            <Setter Property="Foreground" Value="black"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Foreground" Value="white"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel}, Path=IsFocused}" Value="True">
                    <Setter Property="Foreground" Value="black"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListView_Item_Title" BasedOn="{StaticResource ListView_Item_Text}" TargetType="TextBlock">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        </Style>
        <Style x:Key="ListView_Item_Snippet" BasedOn="{StaticResource ListView_Item_Text}" TargetType="TextBlock">
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        </Style>
        <Style x:Key="ListView_Item_Comments" BasedOn="{StaticResource ListView_Item_Text}" TargetType="TextBlock">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Margin" Value="5,0,5,10"></Setter>
            <Setter Property="Foreground" Value="black"></Setter>
        </Style>
        <Style x:Key="ListView_Item_Time" BasedOn="{StaticResource ListView_Item_Text}" TargetType="TextBlock">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="FontSize" Value="9"></Setter>
            <Setter Property="TextAlignment" Value="Right"></Setter>
        </Style>
    </UserControl.Resources>
    <ListView ItemsSource="{Binding ZdfEntries}" Name="LV_EntryList" PresentationTraceSources.TraceLevel="High">
        
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="SelectionChanged">
                <prism:InvokeCommandAction Command="{Binding SelectItemDelegateCommand}" CommandParameter="{Binding ElementName=LV_EntryList, Path=SelectedItems}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
		
        <ListView.ItemTemplate>
            <DataTemplate>
                <Border Style="{StaticResource ListView_Border}" BorderBrush="{Binding TxtDocColor, Converter={StaticResource ColorConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Style="{StaticResource ListView_Item}" >
                        <TextBlock x:Name="docIDTxtBx" Visibility="Collapsed" Text="{Binding TxtDocID, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock x:Name="docNameTxtBx" Text="{Binding TxtDocName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ListView_Item_Title}"/>

                            <TextBlock x:Name="docTextTxtBx1" Text="{Binding TxtDocText, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ListView_Item_Snippet}"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                            <TextBlock x:Name="docCommentTxtBx" Text="{Binding TxtDocComments.Count, Mode=OneWay, StringFormat='Comments ({0})'}" Style="{StaticResource ListView_Item_Comments}">
                            </TextBlock>
                            <TextBlock x:Name="docTimeTxtBx" Text="2 mins ago" Grid.Column="1" Style="{StaticResource ListView_Item_Time}"></TextBlock>
                        </Grid>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
    </ListView>

</UserControl>
