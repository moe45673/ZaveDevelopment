<UserControl x:Class="Zave.Views.ZDFEntryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
            xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             xmlns:local="clr-namespace:Zave.Views"
             xmlns:prismPopup="http://www.codeplex.com/prism"  
             xmlns:prism="http://prismlibrary.com/"    
             prism:ViewModelLocator.AutoWireViewModel="True"             
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:converters="clr-namespace:Zave.Converters"
             xmlns:vm="clr-namespace:ZaveViewModel.ViewModels;assembly=ZaveViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance vm:ZDFEntryViewModel, IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:StringToSourceConverter x:Key="strToSrcConverter"/>
        <converters:FlowDocumentToXamlConverter x:Key="stringToFlowConverter"/>
        <converters:ColorConverters x:Key="ColorConverter"/>
        <converters:CommentCollectionConverter x:Key="CommentConverter"/>


        <Image x:Key="DeleteButtonImage" Source="{Binding ConverterParameter=Delete.png, Converter={StaticResource strToSrcConverter}, Mode=OneWay, Source={StaticResource ImageURIRoot}}" />

        <local:MainWindow x:Key="ZaveShell"/>
        <Style x:Key="gridEntry" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="#F0F0F0"></Setter>
        </Style>
        <Style x:Key="hiLightHeader" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style x:Key="hiLightHeader_Text" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0,0,20,0"/>
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="docName_Text" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
        <Style x:Key="docText_Text" TargetType="{x:Type FlowDocumentScrollViewer}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="12"/>
            <!--<Setter Property="LineHeight" Value="20"/>-->
        </Style>
        <Style x:Key="docCommentLbl_Text" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style x:Key="CommentHeader_StackPanel_Right" TargetType="{x:Type StackPanel}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="CommentHeader_Button_Action" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="DarkGray"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Comment_Button_Delete" BasedOn="{StaticResource CommentHeader_Button_Action}" TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Comment_Item_Container" TargetType="{x:Type ListBox}">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="Background" Value="#F0F0F0"></Setter>
        </Style>
        <Style x:Key="Comment_Item" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="0,3,0,3"/>
        </Style>
        <Style x:Key="Comment_Txt" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="Comment_Author" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </UserControl.Resources>
    
    <Grid x:Name="gridEntry" Style="{StaticResource gridEntry}">
        <interactivity:Interaction.Triggers>

            <prism:InteractionRequestTrigger SourceObject="{Binding CommentDialogRequest}">

                <prismPopup:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                    <prismPopup:PopupWindowAction.WindowContent>
                        <local:CommentInputDialog />
                    </prismPopup:PopupWindowAction.WindowContent>
                </prismPopup:PopupWindowAction>

                <!--<prism:InvokeCommandAction Command="{Binding AddCommentDelegateCommand}" />-->
            </prism:InteractionRequestTrigger>
        </interactivity:Interaction.Triggers>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />

            <RowDefinition Height="*" />

            <RowDefinition Height="*" />



        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>

        <Canvas Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" Background="{Binding TxtDocColor, Converter={StaticResource ColorConverter}, UpdateSourceTrigger=PropertyChanged}"></Canvas>
        <TextBlock x:Name="docIdLbl" Grid.Row="0" Grid.Column="0" Text="{Binding TxtDocID, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"  />
        <Grid x:Name="hiLightHeader" Grid.Row="1" Grid.Column="1" Style="{StaticResource hiLightHeader}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="docPgNmbrTxtBx" Grid.Row="0" Grid.Column="0" Text="{Binding TxtDocPage, StringFormat='Page: {0}',UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource hiLightHeader_Text}"/>
            <TextBlock x:Name="docLastModdedTxtBx1" Grid.Row="0" Grid.Column="1" Text="{Binding TxtDocLastModified, StringFormat='Modified: {0}',UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource hiLightHeader_Text}"/>
            <TextBlock x:Name="docCreatedTxtBx1" Grid.Row="0" Grid.Column="2" Style="{StaticResource hiLightHeader_Text}"/>
        </Grid>
        <TextBlock x:Name="docNameTxtBx" Grid.Row="2" Grid.Column="1" TextWrapping="Wrap" Text="{Binding TxtDocName, UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource docName_Text}"/>
        <Button x:Name="deleteEntryBtn" Grid.Row="2" Grid.Column="2"  Content="{DynamicResource DeleteButtonImage}" ToolTip="Delete" Style="{StaticResource Comment_Button_Delete}" Command="{Binding DeleteEntryDelegateCommand}" CommandParameter="{Binding TxtDocID}"/>
        <FlowDocumentScrollViewer x:Name="docTextTxtBx1" Grid.Row="3" Grid.Column="1" Style="{StaticResource docText_Text}" Document="{Binding TxtDocText, Converter={StaticResource stringToFlowConverter}, UpdateSourceTrigger=PropertyChanged}"/>





        <!--<TextBlock x:Name="docIdTxtBx" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="20" TextWrapping="Wrap" Text="{Binding TxtDocID, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed" />-->

        <Grid x:Name="CommentHeader" Grid.Row="4" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="docCommentLbl" Grid.Row="0" Grid.Column="0" Content="Comments" Style="{StaticResource docCommentLbl_Text}"/>
            <StackPanel Grid.Row="0" Grid.Column="1" Style="{StaticResource CommentHeader_StackPanel_Right}">
                <Button Name="MainAddButton" Content="Add" Style="{StaticResource CommentHeader_Button_Action}" Command="{Binding AddCommentDelegateCommand}"/>
            </StackPanel>
        </Grid>
        <StackPanel Grid.Row="5" Grid.Column="1" Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
        <!--<local:ModalInputDialog DataContext="{Binding CommentDlg, Mode=OneWay}" />-->
        </StackPanel>
        <Grid x:Name="docComments" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Stretch">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <!--<ColumnDefinition Width="50"/>-->
            </Grid.ColumnDefinitions>

            <ListBox ItemsSource="{Binding TxtDocComments}" Name="LB_CommentList" Style="{StaticResource Comment_Item_Container}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction
        					    Command="{Binding SelectCommentDelegateCommand}"
        					    CommandParameter="{Binding ElementName=LB_CommentList, Path=SelectedItems}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Style="{StaticResource Comment_Item}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                
                                <TextBlock x:Name="txtBoxCommentTxt" Text="{Binding CommentText, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource Comment_Txt}"/>
                                <TextBlock x:Name="txtBoxCommentAuthor" Text="{Binding CommentAuthor, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource Comment_Author}"/>
                            </StackPanel>
                            <StackPanel Grid.Column="1">
                                <Button Name="EditButton" Content="Edit"  Style="{StaticResource CommentHeader_Button_Action}" IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" >

                                    <!--<interactivity:Interaction.Triggers>
                                        <interactivity:EventTrigger EventName="Click">
                                            <prism:InvokeCommandAction Command="{Binding ElementName=LB_CommentList, Path=DataContext.EditCommentDelegateCommand}" CommandParameter="{Binding ElementName=LB_CommentList, Converter={StaticResource ColorConverter}}"/>
                                        </interactivity:EventTrigger>
                                    </interactivity:Interaction.Triggers>-->


                                </Button>
                                <Button Name="DeleteButton" Content="Delete"  Style="{StaticResource Comment_Button_Delete}" IsEnabled="False" Visibility="Hidden"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0,3,0,3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border Background="{x:Null}" BorderBrush="LightGray" BorderThickness="0,0,0,1">
                                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{x:Null}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <!--<StackPanel Orientation="Horizontal" Grid.Column="1">
                <StackPanel>
                    <Button Name="EditButton" Content="Edit Comment" IsEnabled="False" >

                        <interactivity:Interaction.Triggers>
                            <interactivity:EventTrigger EventName="Click">
                                <prism:InvokeCommandAction Command="{Binding EditCommentDelegateCommand}" CommandParameter="{Binding SelectedItems, ElementName=LB_CommentList}"/>
                            </interactivity:EventTrigger>
                        </interactivity:Interaction.Triggers>


                    </Button>
                    <Button Name="AddButton" Content="Add Comment">
                        <interactivity:Interaction.Triggers>
                            <interactivity:EventTrigger EventName="Click">
                                <prism:InvokeCommandAction Command="{Binding AddCommentDelegateCommand}" />
                            </interactivity:EventTrigger>
                        </interactivity:Interaction.Triggers>

                    </Button>
                    <Button Name="DeleteButton" Content="Delete Comment" IsEnabled="False"/>
                </StackPanel>

            </StackPanel>-->


        </Grid>

    </Grid>

</UserControl>
