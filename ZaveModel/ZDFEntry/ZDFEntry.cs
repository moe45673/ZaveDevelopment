///////////////////////////////////////////////////////////
//  ZDFEntry.cs
//  Implementation of the Interface IZDFEntry
//  Generated by Enterprise Architect
//  Created on:      28-Mar-2016 8:22:27 AM
//  Original author: Moshe
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.ComponentModel;
using System.Linq;
using ZaveGlobalSettings.Data_Structures;
using ZaveModel.Colors;
using ZaveModel.ZDFSource;



namespace ZaveModel.ZDFEntry {

    public class ZDFEntry : IZDFEntry
    {


        public event EventHandler<ModelEventArgs> PropertyChanged;

        protected virtual void OnPropertyChanged(string description)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new ModelEventArgs(description));

        }

        private int _id;
        public int ID { get { return _id; } }

        public List<Comment.IEntryComment> m_IEntryComment;

        public ZDFEntry()
        {
            m_IEntryComment = new List<Comment.IEntryComment>();
            //Source = new ZaveGlobalSettings.Data_Structures.SelectionState();
            _id = ZDF.ZDFSingleton.setID();
        }

        public ZDFEntry(ZaveGlobalSettings.Data_Structures.SelectionState src) : this()
        {
            m_IEntryComment = new List<Comment.IEntryComment>();
            _id = ZDF.ZDFSingleton.setID();
            _page = src.SelectionPage;
            _name = src.SelectionDocName;
            _text = src.SelectionText;
            _dateModified = src.SelectionDateModified;
            _format = src.srcType;
            _hColor = new ColorCategory(src.Color);
            
        }

        ~ZDFEntry()
        {

        }


        #region Properties
        private ColorCategory _hColor;
        public ColorCategory HColor
        {
            get { return _hColor; }
            set
            {
                _hColor = value;
                OnPropertyChanged("HColor");
            }

        }

        //private ZaveGlobalSettings.Data_Structures.SelectionState _source;
        //public ZaveGlobalSettings.Data_Structures.SelectionState Source
        //{
        //    get { return _source; }
        //    set
        //    {
        //        _source = value;
        //        //OnPropertyChanged("Source", Source);
        //    }
        //}

        private string _page;
        public string Page
        {
            get { return _page; }
            set
            {
                _page = value;
                OnPropertyChanged("Page");
            }
        }

        private string _text;
        public string Text
        {
            get { return _text; }
            set
            {
                _text = value;
                OnPropertyChanged("Text");
            }
        }

        private DateTime _dateModified;
        public DateTime DateModified
        {
            get { return _dateModified; }
            set
            {
                _dateModified = value;
                OnPropertyChanged("DateModified");
            }
        }

        private SrcType _format;
        public SrcType Format
        {
            get { return _format; }
            set
            {
                _format = value;
                OnPropertyChanged("DateModified");
            }
        }

        private string _name;
        public string Name
        {
            get { return _name; }
            set
            {
                _name = value;
                OnPropertyChanged("Name");
            }
        }

        #endregion


    }

    //end ZDFEntry


}//end namespace ZDFEntry